#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# Narizgnaw：非常感谢KFERMercer大佬提供的OpenWrt-CI。

name: 云编译

on:
  push:
    branches: 
      - master
  schedule:
      - cron: 0 16 * * *
  release:
      types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 校验本地文件
        uses: actions/checkout@master
        with:
          ref: master

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
      - name: 清理系统环境 
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          echo "Deleting files, please wait ..."
          sudo rm -rf \
            /usr/share/dotnet \
            /etc/mysql \
            /etc/php
          sudo -E apt-get -y purge \
            azure-cli \
            ghc* \
            zulu* \
            hhvm \
            llvm* \
            firefox \
            google* \
            dotnet* \
            powershell \
            openjdk* \
            mysql* \
            php*
      - name: 更新软件列表
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get update
      - name: 安装编译所需环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
      - name: 进行安装后的清理
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

      - name: 构建自定义文件结构
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/openwrt-develop/luci-theme-atmaterial.git
          git clone https://github.com/KFERMercer/luci-app-serverchan
          git clone https://github.com/rosywrt/luci-theme-rosy
          git clone https://github.com/Ameykyl/luci-app-koolproxyR
          
      - name: 构建编译扩展环境
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 导入自定义配置
        run: |
          rm -f ./.config*
          touch ./.config

          # 编译x64固件:
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7621=y
          CONFIG_TARGET_ramips_mt7621_DEVICE_mir3g=y
          EOF
          
      

          # LuCI插件选择:
          cat >> .config <<EOF
          CONFIG_LIBSODIUM_MINIMAL=y
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_kcptun-client=y
          CONFIG_PACKAGE_libev=y
          CONFIG_PACKAGE_libmbedtls=y
          CONFIG_PACKAGE_libsodium=y
          CONFIG_PACKAGE_libustream-openssl=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Kcptun=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Server=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_ShadowsocksR_Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-ssl-openssl=y
          CONFIG_PACKAGE_shadowsocks-libev-config=y
          CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
          CONFIG_PACKAGE_shadowsocksr-libev-server=y
          CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_v2ray=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          EOF

          # LuCI主题:
          cat >> .config <<EOF
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-rosy=y
          CONFIG_PACKAGE_luci-theme-atmaterial=y
          EOF

          # 常用软件包:
          cat >> .config <<EOF
          CONFIG_PACKAGE_curl=y
          CONFIG_PACKAGE_htop=y
          CONFIG_PACKAGE_wget=y
          CONFIG_PACKAGE_diffutils=y
          EOF
          

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: 下载编译所需源码
        run: |
          make download -j8
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 进行固件编译
        run: |
          echo -e "$(nproc) thread build."
          make -j$(nproc) V=s
          
      - name: 清理不必要的文件
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find ./bin/targets/ -name "*combined*img*" | xargs -i mv -f {} ./artifact/
          find ./bin/targets/ -name "*sysupgrade*bin*" | xargs -i mv -f {} ./artifact/

      - name : 上传固件
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: bin/targets
